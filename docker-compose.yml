# TODO: update env vars according to new settings
version: "3.9"

services:

  nginx:
    image: nginx:latest
    container_name: mindtools-nginx
    ports:
      - "8000:8080"
    volumes:
      - ./nginx_compose:/etc/nginx/conf.d
      - ./data/static:/static
      - ./data/media:/media

    depends_on:
      - app

  db:
    image: postgres:13.1
    container_name: mindtools-postgres
    volumes:
      - ./data/postgres_init_db.sql:/docker-entrypoint-initdb.d/postgres_init_db.sql
      - ./data/postgres:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres -p 5432" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis
    container_name: mindtools-redis
    volumes:
      - ./.docker-data/redis:/data
    ports:
      - '6379:6379'
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 1s
      timeout: 3s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: mindtools-app-image
    environment:
      - DJANGO_ALLOWED_HOSTS=app,localhost,127.0.0.1
      - DJANGO_SETTINGS_MODULE=serafin.settings
      - DJANGO_CSRF_TRUSTED_ORIGINS=http://localhost:8000,http://app:8000,http://127.0.0.1:8000
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres

    command:
      - bash
      - -c
      - |
        python manage.py migrate
        python manage.py createsuperuser --email admin@admin.com --noinput && cat <<-000 | python manage.py shell
        from django.contrib.auth import get_user_model
        admin = get_user_model().objects.get(email='admin@admin.com')
        admin.set_password('admin')
        admin.save()
        print('Superuser password updated successfully.')
        000
        python manage.py collectstatic --noinput
        cp /srv/app/static/* -r /static/
        gunicorn --workers 3 serafin.wsgi --timeout 180 --bind 0.0.0.0:8000 --reload

    volumes:
      - ./data/static:/static
      - ./data/media:/media
      - .:/srv/app # Mount the local folder directly, so no need for extra build
    expose:
      - "8000"
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy

  huey:
    image: mindtools-app-image
    environment:
      - DJANGO_ALLOWED_HOSTS=app,localhost,127.0.0.1
      - DJANGO_SETTINGS_MODULE=serafin.settings
      - DJANGO_CSRF_TRUSTED_ORIGINS=http://localhost:8000,http://app:8000,http://127.0.0.1:8000
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres

    volumes:
      - ./data/static:/static
      - ./data/media:/media
      - .:/srv/app # Mount the local folder directly, so no need for extra build

    command: python manage.py run_huey --disable-autoload
    depends_on:
      - app